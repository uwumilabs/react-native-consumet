import { MovieParser, type ProviderContext } from '../../models';
export declare function createHiMovies(ctx: ProviderContext): MovieParser;
declare class HiMovies extends MovieParser {
    private instance;
    logo: string;
    constructor(customBaseURL?: string);
    get supportedTypes(): any;
    get name(): any;
    get baseUrl(): string;
    set baseUrl(value: string);
    get classPath(): any;
    search(...args: any[]): any;
    fetchAdvancedSearch(...args: any[]): any;
    fetchTopAiring(...args: any[]): any;
    fetchMostPopular(...args: any[]): any;
    fetchMostFavorite(...args: any[]): any;
    fetchLatestCompleted(...args: any[]): any;
    fetchRecentlyUpdated(...args: any[]): any;
    fetchRecentlyAdded(...args: any[]): any;
    fetchTopUpcoming(...args: any[]): any;
    fetchStudio(...args: any[]): any;
    fetchSubbedAnime(...args: any[]): any;
    fetchDubbedAnime(...args: any[]): any;
    fetchMovie(...args: any[]): any;
    fetchTV(...args: any[]): any;
    fetchOVA(...args: any[]): any;
    fetchONA(...args: any[]): any;
    fetchSpecial(...args: any[]): any;
    fetchGenres(...args: any[]): any;
    genreSearch(...args: any[]): any;
    fetchSchedule(...args: any[]): any;
    fetchSpotlight(...args: any[]): any;
    fetchSearchSuggestions(...args: any[]): any;
    fetchContinueWatching(...args: any[]): any;
    fetchWatchList(...args: any[]): any;
    fetchMediaInfo(...args: any[]): any;
    fetchEpisodeSources(...args: any[]): any;
    fetchEpisodeServers(...args: any[]): any;
}
export default HiMovies;
//# sourceMappingURL=himovies.d.ts.map